#include <stdio.h>
#include <limits.h>
#include <stdbool.h>

#define V 4

int tsp(int graph[V][V], bool visited[], int currPos, int count, int cost, int ans) {
    if (count == V && graph[currPos][0]) {
        if (cost + graph[currPos][0] < ans)
            ans = cost + graph[currPos][0];
        return ans;
    }
    for (int i = 0; i < V; i++) {
        if (!visited[i] && graph[currPos][i]) {
            visited[i] = true;
            ans = tsp(graph, visited, i, count + 1, cost + graph[currPos][i], ans);
            visited[i] = false;
        }
    }
    return ans;
}

int main() {
    int graph[V][V] = {
        {0, 10, 15, 20},
        {10, 0, 35, 25},
        {15, 35, 0, 30},
        {20, 25, 30, 0},
    };
    bool visited[V] = {false};
    visited[0] = true;
    int ans = INT_MAX;
    ans = tsp(graph, visited, 0, 1, 0, ans);
    printf("Minimum TSP cost: %d\n", ans);
    return 0;
}
