#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#define MAX_VERTICES 50

typedef struct {
    int V;
    bool adj[MAX_VERTICES][MAX_VERTICES];
} Graph;

Graph* Graph_create(int V) {
    Graph* g = malloc(sizeof(Graph));
    g->V = V;
    for (int i = 0; i < V; i++)
        for (int j = 0; j < V; j++)
            g->adj[i][j] = false;
    return g;
}

void Graph_addEdge(Graph* g, int v, int w) {
    g->adj[v][w] = true;
}

void Graph_BFS(Graph* g, int s) {
    bool visited[MAX_VERTICES] = {false};
    int queue[MAX_VERTICES], front = 0, rear = 0;

    visited[s] = true;
    queue[rear++] = s;

    while (front != rear) {
        s = queue[front++];
        printf("%d ", s);
        for (int adj = 0; adj < g->V; adj++) {
            if (g->adj[s][adj] && !visited[adj]) {
                visited[adj] = true;
                queue[rear++] = adj;
            }
        }
    }
}

int main() {
    Graph* g = Graph_create(4);
    Graph_addEdge(g, 0, 1);
    Graph_addEdge(g, 0, 2);
    Graph_addEdge(g, 1, 2);
    Graph_addEdge(g, 2, 0);
    Graph_addEdge(g, 2, 3);
    Graph_addEdge(g, 3, 3);

    printf("BFS from vertex 2: ");
    Graph_BFS(g, 2);
    printf("\n");
    free(g);
    return 0;
}
